services:

  postgres:
    image: postgres:14 
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "auth_admin" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    ports:
      - "5432:5432"
    hostname: postgres
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: auth_admin
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: auth  
    volumes:
      - ./db/postgres/tmp/db:/var/lib/postgresql/data
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql

  auth-service:
    build:
      context: .
      dockerfile: ./authService/authService.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres

  todo-service:
    build:
      context: .
      dockerfile: ./todoService/todoService.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
      - auth-service

  gateway-service:
    build:
      context: .
      dockerfile: ./gatewayService/gatewayService.dockerfile
    restart: always
    ports:
      - "8190:8190"
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - postgres
      - auth-service
      - todo-service
      
  redis:
    hostname: redis
    image: "redis:alpine"
    restart: always
    ports:
      - 6379:6379
